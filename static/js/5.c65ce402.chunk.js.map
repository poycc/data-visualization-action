{"version":3,"sources":["utils/index.ts","pages/Canvas/Basic/BasicList/index.tsx"],"names":["setupCanvas","canvas","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","style","ctx","getContext","scale","BasicList","canvasRef","useRef","useEffect","current","fillStyle","fillRect","clearRect","strokeRect","beginPath","moveTo","lineTo","fill","arc","Math","PI","closePath","stroke","i","j","x","y","endAngle","anticlockwise","quadraticCurveTo","ref"],"mappings":"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","file":"static/js/5.c65ce402.chunk.js","sourcesContent":["export const setupCanvas: (\n  canvas: HTMLCanvasElement,\n) => CanvasRenderingContext2D | null = (canvas: HTMLCanvasElement) => {\n  const dpr = window.devicePixelRatio || 1;\n  const rect = canvas.getBoundingClientRect();\n  const { width, height } = rect;\n  /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  canvas.width = rect.width * dpr;\n  canvas.height = rect.height * dpr;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return null;\n  ctx.scale(dpr, dpr);\n  return ctx;\n};\n","import React, { useRef, useEffect } from 'react';\nimport { setupCanvas } from 'src/utils';\n\nconst BasicList: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const ctx = setupCanvas(canvasRef.current);\n\n    if (!ctx) return;\n\n    ctx.fillStyle = 'rgb(200,0,0)';\n    ctx.fillRect(10, 10, 100, 100);\n    ctx.fillStyle = 'rgba(0, 0, 200, 0.5)';\n    ctx.fillRect(30, 30, 100, 100);\n    ctx.fillRect(150, 10, 100, 100);\n    ctx.clearRect(160, 20, 80, 80);\n    ctx.strokeRect(170, 30, 60, 60);\n    ctx.beginPath();\n    ctx.moveTo(300, 10);\n    ctx.lineTo(300, 110);\n    ctx.lineTo(335, 50);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(450, 50, 50, 0, Math.PI * 2, true);\n    ctx.moveTo(485, 50);\n    ctx.arc(450, 50, 35, 0, Math.PI, false);\n    ctx.moveTo(435, 40);\n    ctx.arc(430, 40, 5, 0, Math.PI * 2, true);\n    ctx.moveTo(475, 40);\n    ctx.arc(470, 40, 5, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(550, 10);\n    ctx.lineTo(650, 10);\n    ctx.lineTo(550, 100);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(560, 100);\n    ctx.lineTo(660, 100);\n    ctx.lineTo(660, 10);\n    ctx.closePath();\n    ctx.fill();\n    for (let i = 0; i < 4; i += 1) {\n      for (let j = 0; j < 3; j += 1) {\n        ctx.beginPath();\n        const x = 700 + j * 50;\n        const y = 50 + i * 50;\n        const radius = 20;\n        const startAngle = 0;\n        const endAngle = Math.PI + (Math.PI * j) / 2;\n        const anticlockwise = i % 2 !== 0;\n\n        ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n\n        ctx.closePath();\n\n        if (i > 1) {\n          ctx.fill();\n        } else {\n          ctx.stroke();\n        }\n      }\n    }\n    ctx.beginPath();\n    ctx.moveTo(880, 110);\n    ctx.fillRect(880, 10, 100, 100);\n    ctx.quadraticCurveTo(930, 20, 980, 10);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.strokeRect(1100, 10, 200, 100);\n    ctx.moveTo(1110, 50);\n    ctx.lineTo(1200, 50);\n    ctx.lineTo(1200, 20);\n    ctx.lineTo(1250, 60);\n    ctx.lineTo(1200, 100);\n    ctx.lineTo(1200, 70);\n    ctx.lineTo(1110, 70);\n    ctx.lineTo(1110, 50);\n    ctx.closePath();\n    ctx.stroke();\n  }, []);\n\n  return <canvas width={1400} height={800} ref={canvasRef} />;\n};\n\nexport default BasicList;\n"],"sourceRoot":""}